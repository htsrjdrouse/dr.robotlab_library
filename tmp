


module zbed_assy(z){
color("gainsboro")cable_support();
translate([20,31,0])mirror([0,1,0])color("gainsboro")cable_support_lid();
}

module xshuttle_assy(x,y){

//x shuttle
//corexy_beltsetup(x,y);
translate([0,y,0]){
x_axis(x);
translate([20,217,400-50])rotate([0,0,-90])x_encoder_support();
}
}

module zencoder_assy(){
translate([-100+50,405-210,277])rotate([0,0,90])color("gainsboro")z_encoder_inbetween();
translate([-100+50,405-210,77])rotate([0,0,90])color("gainsboro")z_encoder_inbetween();
//z encoder
translate([360,250-130+70-70+60,10])rotate([180,180,-90]){
//translate([-100,405,277])rotate([90,0,0])color("gainsboro")tslot20innerbracket();
//translate([280,405,33-25])rotate([90,180,0])tslot20innerbracket();
translate([75,-55+464,9.5])tslot20(400);
//translate([75+5,-55+464,96])color("gainsboro")cube([18,3,150]);
}
}

module zbed_assy(z){
translate([0,0,z]){
zbed_smz();
translate([0,0,-10])wash_and_strobparts();
translate([145+25+25,315-65,172-10])rotate([90,90,0])tslot20(200);
//laser_zbed(144);
}

}

module xymotor_assy(){
//XY motor assembly
translate([440,405,333.3])rotate([0,0,180])XY_bearings_Right_x1();
translate([0,405,338.3])rotate([0,0,0])XY_bearings_Left_x1();
translate([10-23+70,25,-65])rotate([0,180,180])mirror([0,0,1])XY_motor_x2higher();
translate([360+25,25,-60])rotate([0,0,180])XY_motor_x2higher();
}



//washbowl_assy();
//gantry_assy(140,-30,-45+50+100,-55,1,267);

//conveyer_connector_tslots();

module gantry_assy(x,y,z,xx,xp,sph,tcl,thcl){
 zencoder_assy();
 filament_driver_assy();
 xshuttle_assy(x,y);
 zbed_assy(z);
 gantry();
 outside_frame(tcl,thcl);
 y_encoder_support(60);
 xymotor_assy();

 conveyer_connector_tslots();
 slide_conveyer_caller(z,xx,xp,sph);

 /*
 noconveyer_backside_panel();
 //electronics_configuration();
 //slide_conveyer_caller(z,xx,xp,sph);
 //slide_conveyer_frame();
 //translate([-36.25+0.5-60+30+215,-33+580-4,90])rotate([-90,0,90])conveyer_solenoid_pcb();
 //outside_frame(tcl,thcl);
 //slide_conveyer_caller(z,xx,xp,sph);
 */
}

//noconveyer_gantry_assy(20,-30,-45+50+100-50-100+150,-55,0,267,tcl,thcl);
module noconveyer_gantry_assy(x,y,z,xx,xp,sph,tcl,thcl){
 pcb_panels();
 zencoder_assy();
 //filament_driver_assy();
 xshuttle_assy(x,y);
 zbed_assy(z);
 gantry();

 outside_frame(tcl,thcl);
 //y_encoder_support(60);
 //xymotor_assy();
 //electronics_configuration();
 labbot3d_electronics_configuration();
}








//47,63,23
//SSR-25 DA DC-AC 25A/250V 3-32VDC/24-380VAC SSR Single Phase




module fotek_solidstate_relay(){
color("white")cube([47,58.5,23]);
}





module arduino_softpot_linearencoder_plate_washdry(){
difference(){union(){
translate([-60,53,0])rotate([0,180,0])highcurrent_power_mosfet_wash_dry_pcv_fan(95,32);
translate([0,53,0])rotate([0,180,0])9pinconnector_for_softpot(42,37);
translate([0,0,10])rotate([0,180,0])softpot_linearencoder_16bitadc_brd_assy();
translate([-150,-14,0])rotate([0,180,-90])arduino_base_template();
translate([4-83-43,13+28,-3])cube([12+20,17-9,3]);
translate([4-83+23,13+30,-3])cube([12+2,17+14,3]);
translate([4-83,13,-3])cube([12+4,17,3]);
translate([4-83-92,13,-3])cube([12+4+3,17,3]);
translate([4-83-92,13+38,-3])cube([12+4+3,17,3]);
translate([4,13,-3])cube([12,15,3]);
translate([4,13+50,-3])cube([12,15,3]);
}
translate([4-83-43-20,13+28-45,-3+0.1])cube([12+35,17-9+24,3]);
translate([25.1,334.25,0])rotate([0,0,180]){
translate([10+180,13.5+300,-100])cylinder(r=3.7/2,h=300);
translate([10-93+180,13.5+300,-100])cylinder(r=3.7/2,h=200);
translate([10-176+180,13.5+300,-100])cylinder(r=3.7/2,h=200);
translate([10-176+180,13.5-50+300,-100])cylinder(r=3.7/2,h=200);
translate([10+180,13.5-40+300,-100])cylinder(r=3.7/2,h=200);
}
}
}

module azteeg_raspi_plate(){

translate([20-4,-40-2,0])difference(){
union(){
translate([110+10,405,-0])rotate([0,180,90])azteeg_x5_mini_plate();
//translate([110+10,405,-0])rotate([0,180,90])azteeg_x5_mini();
translate([55,300,-0])rotate([0,0,0])cube([150,110,3]);
//translate([180+10,310,-0])rotate([0,180,0])raspib_model();
translate([180+10,310+90,2])rotate([0,180,90])raspi_plate();
}
translate([55+10,300+15,-10])rotate([0,0,0])cube([65,80,13]);
translate([55+10+60+18,300+15+5-10,-10])rotate([0,0,0])cube([40,85,13]);
translate([-150,279,0]){
translate([170+180,13.5-185+300,-100])cylinder(r=3.7/2,h=200);
translate([170+180,13.5-290+300,-100])cylinder(r=3.7/2,h=200);
translate([30+180,13.5-185+300,-100])cylinder(r=3.7/2,h=200);
translate([30+180,13.5-290+300,-100])cylinder(r=3.7/2,h=200);
}
}

}


module steppermotordriver_4setplate(){

translate([-230+7,75-10,0])rotate([0,180,0])steppermotordriver_brd();
translate([-290+7,75-10,0])rotate([0,180,0])steppermotordriver_brd();
translate([-290+7,130,0])rotate([0,180,0])steppermotordriver_brd();
translate([-230+7,130,0])rotate([0,180,0])steppermotordriver_brd();
translate([-230,75-14,0])rotate([0,180,0])difference(){cube([15,10,3]);
translate([7,3,-0.2])cylinder(r=3.2/2,h=20);
}
translate([-230-47-60,75-14+20+60,0])rotate([0,180,0])difference(){cube([13,20,3]);
translate([8,9.7,-40])cylinder(r=3.2/2,h=200);
}
translate([-230-47-60,75-14+20,0])rotate([0,180,0])difference(){cube([13,20,3]);
translate([8,9.7,-40])cylinder(r=3.2/2,h=200);
}
translate([-230-47,75-14+20+60,0])rotate([0,180,0])cube([7,20,3]);
translate([-230-47,75-14+20,0])rotate([0,180,0])cube([7,20,3]);
translate([-230-70,75-14+60,0])rotate([0,180,0])cube([15,4,3]);
translate([-230,75-14+60,0])rotate([0,180,0])cube([15,4,3]);
translate([-230,75-14,0])rotate([0,180,0])difference(){cube([15,10,3]);
translate([7,3,-0.2])cylinder(r=3.2/2,h=20);
}
translate([-230,75-14+115,0])rotate([0,180,0])difference(){cube([15,10,3]);
translate([7,3+4,-0.2])cylinder(r=3.2/2,h=20);
}
}


module steppermotordriver_steppermotor_shields_5v_gnd_limit_pins_5endstops_4solenoids(){
translate([-170+13,140-45,0])rotate([0,180,0])steppermotordriver_brd();
//translate([-170,75,0])rotate([0,180,0])steppermotor_shields_5v_gnd_limit_pins_5endstops_4solenoids(47,53);
//translate([-170+25-5-30,129.5,0])rotate([0,180,0])cube([24,5,3]);
/*
translate([-170+25-5,140-46.5,0])rotate([0,180,0])difference(){cube([14,15,3]);
translate([5,7.3,0])cylinder(r=3.2/2,h=20);
}
*/

translate([-170+25-5,153,0])rotate([0,180,0])difference(){cube([14,15,3]);
translate([5,7.3,0])cylinder(r=3.2/2,h=20);
}
}

module electronics_configuration(){

translate([130,3+7,-50])rotate([-90,180,0])kill_button_leds_panelmount();

translate([400,55,0]){
azteeg_raspi_plate();
}
/*
translate([400,55,0]){
arduino_softpot_linearencoder_plate_washdry();
translate([-200,54,0])rotate([0,180,90])arduino_mega_base_template_bottomattach();
steppermotordriver_4setplate();
steppermotordriver_steppermotor_shields_5v_gnd_limit_pins_5endstops_4solenoids();


translate([-130,280-70,0])rotate([0,180,0])kill_signal_mosfet_brd(33,28);
translate([-105-8,180+75,0])rotate([0,180,0])fotek_solidstate_relay();
}
translate([20,-40,0]){
translate([-5,300,-45])rotate([0,0,0])color("gainsboro")cube([45,70,35]);
}
azteeg_raspi_plate();

//power supply
//S-360-12 12V 30A power supply
translate([300,160,-40]){
 color("blue")cube([115,216,40]);
}

*/

}

//translate([15-25+229.5,206.5-11,-63+400])rotate([90,0,0])sandwich_sliderwheel_assy();
//slider_front_assy();

//filament_linearactuator();
module slider_front_assy(){

translate([0,3,0]){
pagg = 0.88; color([pagg,pagg,pagg])
//color("lime")
translate([208-16+33.5-7,188-16+16-70+0+11.5+31.5,342-35+30+150-70-80+45])rotate([-0,0,0])cylinder(r=6/1,h=300);
ptagg = 0.38; color([ptagg,ptagg,ptagg])
//color("gainsboro")
translate([208-16+33.5-7,188-16+16-70+0+11.5+31.5,342-35+30+150-70-80+53])rotate([-0,0,0])cylinder(r=10/1,h=10,$fn=6);
agg = 0.2; color([agg,agg,agg])
translate([208-16+33.5-7,188-16+16-70+0+11.5+31.5,342-35+30+150-70-80])rotate([-0,0,0])cylinder(r=2/1,h=1000);
sgg = 0.6; color([sgg,sgg,sgg])
translate([208-16+16,188-16+16,342-35+30])rotate([90,0,0])inductivesensorcap();

sgg = 0.6; color([sgg,sgg,sgg])
translate([208-16+33.5,188-16+16-70+0+11.5,342-35+30+150-70])rotate([-90,0,0])linearactuator_filament_encodershuttle_filamentclamp();
translate([0,0,-3]){
translate([208,188,342])rotate([90,0,0])filament_linearactuator();
//inductive sensor
cgg = 0.5;color([cgg,cgg,cgg])
translate([208-16,188-16,342-35])cylinder(r=12/2,h=55);
}
/*
*/
}
translate([15-25+229.5,206.5-11,-63+400])rotate([90,0,0])sandwich_sliderwheel_assy();
//shuttle_front();
//translate([-100,-100,0])rotate([90,-90,0])linearactuator_cordglide();
//translate([15-25+460/2,206.5-15,-60+400])rotate([90,0,0])slider_x4();
}




module inductivesensorcap(){
import("files/inductive_attach.stl");

}

module slider_back_assy(){
translate([0,0,-3]){
translate([208+24,188+40-6.5,342])color("gainsboro")rotate([-90,180,0])shuttle_back();
translate([208+24-64,188+40-6.5-60+11.5,343+46])rotate([90,0,90])tslot20_2060(100);
translate([208+24-64+70,188+40-6.5-60+11.5+26,343+46+25])rotate([0,0,0])
//color("gainsboro")
color("gainsboro")
wiper_clamp();

translate([15-25+460/2,206.5+15,-60+400])rotate([90,0,0]){
color("gainsboro")
translate([-25-12,5+4,41-12])rotate([-90,0,0])import("files/gt2belt_holder.stl");
color("gainsboro")
translate([-25-12-50,5+4,41-12])rotate([-90,0,0])import("files/gt2belt_holder.stl");

slider_x4();
/*
difference(){
translate([-32,45,0.0])color("silver")cube([54,30-3.5,3.3]);
translate([10.5,64.,-10])cylinder(r=(5.7)/2,h=20);
translate([-19.5,64,-10])cylinder(r=(5.7)/2,h=20);
}
*/
}
}
}

module slider_assy(x){

translate([x,0,0]){
//translate([190,52,420])rotate([180,0,90])color([160/255,160/255,160/255])camera_assy();
//translate([190+80,52+70+5.8,420-22-20])rotate([180,0,90])color([220/255,220/255,200/225])rotate([180,0,90])lasermount_assy();
//translate([15-25-150,206.5,-60+400])sandwich_sliderwheel_assy();
slider_front_assy();
slider_back_assy();
}
}

module x_axis(x){

slider_assy(x);
translate([15-25,206.5,-60+400])rotate([0,0,-90])sliderwheel_assy();
translate([15-25,206.5,-60+400])color("gainsboro")wiper_clamp_yaxis();
translate([43-25,206.5-15,-60+430])rotate([-90,90,-90])tslot20(400);
translate([15-25+460,206.5,-60+400])rotate([0,0,90])sliderwheel_assy();
}

module zdrive_assay(){
translate([220-1,362,15]){
nema17();
translate([0-100,0+10,-10])cylinder(r=12.7/2,h=320);
//translate([526.8-346.8,603.6,-0.1])cylinder(r=34.8/2,h=30);
translate([0,0,30])cylinder(r=8.7/2,h=320);
}
}



//color("gainsboro")translate([0,60,0])back_plate_x1();
//front_plate_x1();
//back_plate_x1();
//slider_x4();
//based on DWG files
//m10 diam = 10.44
//m8 diam = 8.4
//slider_x4();
//XY_bearings_Right_x1();
//XY_bearings_Left_x1();

/*
projection(cut = false){
bottom_x1();
}
*/
module bottom_x1(){
difference(){
cube([411.103,370.27,3]);

//translate([265+8-110,150+46-48-75,-100])cylinder(r=3.7/2,h=200);
translate([265+8-210,150-48-75+20,-100])cylinder(r=2.8/2,h=200);

//BOM_atxpowerconnect begin
translate([127.4,149.5,-40])mirror([0,0,0])rotate([0,0,180]){
translate([5.25-8,95,-20])cylinder(r=2.8/2,h=80);
translate([58.512-13.0,46.738-5,-20])cylinder(r=2.8/2,h=80);
translate([94.155-5.3,3.484+3.8,-20])cylinder(r=2.8/2,h=80);
}
//BOM_atxpowerconnect end

//BOM_conveyer_solenoids begin
translate([127.4+100-2,149.5-60,-40])mirror([0,0,0])rotate([0,0,180]){
translate([5.386,34.422,-50.1])cylinder(r=2.8/2,h=200);
translate([74.037,34.422,-50.1])cylinder(r=2.8/2,h=200);
translate([58.584,4.277,-50.1])cylinder(r=2.8/2,h=200);
}
//BOM_conveyer_solenoids end

//BOM_amplifier_brd begin
translate([127.4+20-2,135.5-60,-40])mirror([0,0,0])rotate([0,0,0]){
translate([4.2,29.2,-0.1])cylinder(r=2.8/2,h=200);
translate([59.8,31.2,-0.1])cylinder(r=2.8/2,h=200);
translate([8.422-4.3,80.4,-0.1])cylinder(r=2.8/2,h=200);
translate([59.7,84.30,-0.1])cylinder(r=2.8/2,h=200);
}
//BOM_amplifier_brd end

//BOM_washdrypcv_kill begin
translate([127.4-22.3,239.3,-40])mirror([0,0,0])rotate([0,180,-90]){
translate([28.235,90.424,-50])cylinder(r=2.8/2,h=200);
translate([72.286,92.913,-50])cylinder(r=2.8/2,h=200);
translate([5.587,4,-50])cylinder(r=2.8/2,h=200);
translate([91.698,4,-50])cylinder(r=2.8/2,h=200);
}
//BOM_washdrypcv_kill end

//BOM_azteeg begin
translate([351.1,220.3,0])rotate([0,0,90]){
translate([7,13,-50])cylinder(r=2.8/2,h=200);
translate([7,13+48,-50])cylinder(r=2.8/2,h=200);
translate([7+92,13,-50])cylinder(r=2.8/2,h=200);
translate([7+92,13+48,-50])cylinder(r=2.8/2,h=200);
}
//BOM_azteeg end

//BOM_conveyer_pcb begin
translate([249,75.3,0])rotate([180,0,90]){
translate([25.334,93.131,-20.1])cylinder(r=2.8/2,h=60);
translate([114.619,92.881,-20.1])cylinder(r=2.8/2,h=60);
translate([7.577,6.348,-20.1])cylinder(r=2.8/2,h=60);
translate([114.369,6.348,-20.1])cylinder(r=2.8/2,h=60);
}
//BOM_conveyer_pcb end

//solidstate relay holes
//translate([-105-8,180+75,0])rotate([0,180,0])fotek_solidstate_relay();
translate([265+8-210,150-48-75+20,-100])cylinder(r=3.7/2,h=200);
for(i=[0:3]){
for(j=[0:3]){
translate([265+8-210+j*90,150-48-75+20+90*i,-100])cylinder(r=3.7/2,h=200);
}
}
//46
//translate([265+8-110,150+46-48-75+0,-100])cylinder(r=3.7/2,h=200);

translate([411.103-10,370.27-10,-100])cube([20,20,200]);
translate([-10,-10,-100])cube([20,20,200]);
translate([-10,370.27-10,-100])cube([20,20,200]);
translate([400,5,-100])cylinder(r=60/2,h=200);
translate([390,355,-100])cylinder(r=15/2,h=200);
translate([20,355,-100])cylinder(r=15/2,h=200);

}

}

module left_plate_x1(){
//length = 370.736
//width = 62.81
scale([1,1,1])difference(){
cube([370.2,62.814,3]);
translate([37.12,33.408,-0.1])cylinder(r=37.584/2,h=30);
translate([20.88,16.704,-0.1])cylinder(r=5.365/2,h=30);
translate([20.88,16.704,-0.1])cylinder(r=5.365/2,h=30);
translate([54.29,16.704,-0.1])cylinder(r=5.365/2,h=30);
translate([20.88,49.65,-0.1])cylinder(r=5.365/2,h=30);
translate([54.29,48.65,-0.1])cylinder(r=5.365/2,h=30);
x = 58;
y = 35;
translate([62+120+60-180+180,14+10,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8+30,y+8-20,700]);
for(i=[0:2]){
translate([62+120+50+i*50-180+180,14-3,-50])cylinder(r=3.7/2,h=200);
translate([62+120+50+i*50-180+180,14-3+35,-50])cylinder(r=3.7/2,h=200);
}
translate([40,0,0]){

//right here
//translate([62+120+60-180,14+10,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8+30,y+8-20,700]);

translate([10,0,0]){
translate([62+120+60-180+2,14+10,-50])rotate([0,0,0]){
translate([-7-9-6,-7+7-4,-3.1])cube([11+75+14,13+8,700]);
}
}
translate([10,0,0]){
translate([62+120+60-180+2,14+10,-50])rotate([0,0,0]){
translate([-7,-7+7,-3.1])cube([11,13,700]);
translate([-7+11/2,-7+7-8,-3.1])cylinder(r=4/2,h=200);
translate([-7+11/2,-7+7+21,-3.1])cylinder(r=4/2,h=200);
}

translate([62+120+60-180+2+17,14+10,-50])rotate([0,0,0]){
translate([-7,-7+7,-3.1])cube([11,13,700]);
translate([-7+11/2,-7+7-8,-3.1])cylinder(r=4/2,h=200);
translate([-7+11/2,-7+7+21,-3.1])cylinder(r=4/2,h=200);
}
translate([62+120+60-180+2+(17*2),14+10,-50])rotate([0,0,0]){
translate([-7,-7+7,-3.1])cube([11,13,700]);
translate([-7+11/2,-7+7-8,-3.1])cylinder(r=4/2,h=200);
translate([-7+11/2,-7+7+21,-3.1])cylinder(r=4/2,h=200);
}
translate([62+120+60-180+2+(17*3),14+10,-50])rotate([0,0,0]){
translate([-7,-7+7,-3.1])cube([11,13,700]);
translate([-7+11/2,-7+7-8,-3.1])cylinder(r=4/2,h=200);
translate([-7+11/2,-7+7+21,-3.1])cylinder(r=4/2,h=200);
}
}


for(i=[0,2]){
translate([62+120+50+i*50-180,14-3,-50])cylinder(r=3.7/2,h=200);
translate([62+120+50+i*50-180,14-3+35,-50])cylinder(r=3.7/2,h=200);
}
}
/*
//URBEST�Inlet Module Plug Fuse Switch Male Power Socket 10A 250V 3 Pin IEC320 C14
translate([450,57.6-30,-0.1]){
//cube([78,45.6,5]);
cube([83,48,5]);
translate([83/2,48/2-(39/0.58)/2,0])cylinder(r=7/2,h=5);
translate([83/2,48/2+(39/0.58)/2,0])cylinder(r=7/2,h=5);
}
*/
//translate([142.2,17.2,-0.1])
//translate([142.2,79.6,-0.1])
//cylinder(r=7/2,h=5);
space = (29.2+20);

translate([230*0.58,55*0.58,0])rotate([0,0,90]){

/*
for(j=[2:4]){
for(i=[0:6]){translate([0,(-90-12.5-i/2-space*j)*0.58,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
for(i=[0:6]){translate([0,(-90+12.5+i/2-space*j)*0.58,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
translate([-17/2*0.58,-90-17/2-space*j*0.58,-1])rotate([0,0,0])cube([17*0.58,17*0.58,13]);
}
*/

/*
for(i=[0:4]){translate([(-17/2-25)*0.58,(-90+12.5+i/2-45+50*i)*0.58,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
for(i=[0:4]){translate([(-17/2-14+50)*0.58,(-90+12.5+i/2-45+50*i)*0.58,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}

translate([(-17/2-14)*0.58,(-90-17/2-10)*0.58,-1])rotate([0,0,0])cube([(17+24)*0.58,170*0.58,13]);
*/
}
}
}

//binding post
module binding_post_connector(){
difference(){
cube([49,95,2]);
translate([0,0,0]){
translate([5.5,12,-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+25,-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+25*2,-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+25*3,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12+25*3,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12+25,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12+25*2,-12])cylinder(r=2.8/2,h=20);
}
for(i=[0:4]){
translate([5.5+18,24+i*20,-12])cylinder(r=4.5/2,h=20);
//translate([2+14+8+2,24+5+i*20,-12])cylinder(r=4.5/2,h=20);
}
}
}


module cover_connector(){
difference(){
translate([0,95.5,0])cube([49,95-20,2]);
translate([0,0,0]){
translate([5.5,12,-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+25,-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+25*2,-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+25*3,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12+25*3,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12+25,-12])cylinder(r=2.8/2,h=20);
translate([5.5+36,12+25*2,-12])cylinder(r=2.8/2,h=20);
for(i=[0:6]){
translate([5.5+36,12+(25*i),-12])cylinder(r=2.8/2,h=20);
translate([5.5,12+(25*i),-12])cylinder(r=2.8/2,h=20);
}

}
for(i=[0:5]){
translate([5.5+18,24+i*20,-12])cylinder(r=4.5/2,h=20);
//translate([2+14+8+2,24+5+i*20,-12])cylinder(r=4.5/2,h=20);
}
}
}















module right_plate_x1(){
//length = 370.736
//width = 62.81
space = (29.2+20);
difference(){
union(){
color("gray")cube([370.74,62.8,3]);
//translate([77.5+30-50,20+3+0,5])rotate([0,0,90])justusb_otherend();
//translate([77.5+30-50-10,20+3+0-10,5])rotate([0,0,0])
//atx_power_sockets();
/*
translate([77.5+30-50-10,20+3+0-10,5])rotate([0,0,0])atx_power_socket_24pin();
translate([77.5+30-50+28,20+3+0-10+19,5])rotate([0,0,0])atx_power_socket_8pin();
translate([77.5+30-50+28+35,20+3+0-10+19,5])rotate([0,0,0])atx_power_socket_8pin();
*/
//atx_power_sockets();
/*
//atx_power_sockets();
//atx_power_socket_24pin();
//translate([38,19,0])atx_power_socket_8pin();
translate([77.5+30-50,20+3+0,5])rotate([0,0,90])justusb();
translate([77.5+30-50+29.2+20,20+3+0,5])rotate([0,0,90])justusb();
translate([77.5+30-50+(29.2+20)*4,20+3+0,5])rotate([0,0,90])rj45jack();
translate([77.5+30-50+(29.2+20)*2,20+3+0,5])rotate([0,0,90])justuniversal();
*/
}
translate([77.5+30-50,20+3+0,5-6])rotate([0,0,90])translate([15/2,20,0]){
j = 0.7;

//here is the orginal which I want to replace this is just a temp 
/*
translate([-17/2+3,-90-17/2-space*j,-1])cube([17,17+120,13]);
for(j=[-4:2]){
for(i=[0]){translate([0+20,-90-12.5-i/2-(25)*j+12,-1])cylinder(r=3.7/2,h=10);}
for(i=[0]){translate([0+20-36,-90-12.5-i/2-(25)*j+12,-1])cylinder(r=3.7/2,h=10);}
}
*/
//end tmp part

//translate([0,-14.6,-1])cylinder(r=3.7/2,h=10);
//translate([0,14.6,-1])cylinder(r=3.7/2,h=10);

//usb
/*
for(j=[3:4]){
for(i=[0:6]){translate([0,-90-12.5-i/2-space*j,-1])cylinder(r=3.7/2,h=10);}
for(i=[0:6]){translate([0,-90+12.5+i/2-space*j,-1])cylinder(r=3.7/2,h=10);}
translate([-17/2,-90-17/2-space*j,-1])cube([17,17,13]);
}
*/

}
x = 58;
y = 35;


translate([62+120+60-180,14+10,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8+30,y+8-20,700]);
for(i=[0:2]){
translate([62+120+50+i*50-180,14-3,-50])cylinder(r=3.7/2,h=200);
translate([62+120+50+i*50-180,14-3+35,-50])cylinder(r=3.7/2,h=200);
}



translate([62+120+60-18,14+10,-50])rotate([0,0,0])translate([-7,-7-2,-3.1])cube([x+8+30,y+8-20+4,700]);
for(i=[0:2]){
translate([62+120+50+i*50-18,14-3,-50])cylinder(r=3.7/2,h=200);
translate([62+120+50+i*50-18,14-3+35,-50])cylinder(r=3.7/2,h=200);
}
}
}



module back_plate_plug_rise(){


//URBEST�Inlet Module Plug Fuse Switch Male Power Socket 10A 250V 3 Pin IEC320 C14
translate([320,15,-0.1-29])difference(){
union(){
translate([-3,-3,0])cube([(48+6),(28+6),29]);
translate([-3+54/2-4,-3-7,0])cube([(8),(8),29]);
translate([-3+54/2-4,-3+34-2,0])cube([(8),(8),29]);
}
cube([(48),(28),35]);
translate([(48)/2,(28)/2-(39)/2,0])cylinder(r=4.2/2,h=35);
translate([(48)/2,(28)/2+(39)/2,0])cylinder(r=4.2/2,h=35);
}


}


module back_plate_x1(){
x = 58;
y = 35;
//length = 410.3
//height = 60.5
//back_plate_plug_rise();
scale([1,1,1])difference(){
cube([410.3,60.5,3]);
translate([62+120+60,14+10,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8+30,y+8-20,700]);
for(i=[0:2]){
translate([62+120+50+i*50,14-3,-50])cylinder(r=3.7/2,h=200);
translate([62+120+50+i*50,14-3+35,-50])cylinder(r=3.7/2,h=200);
}
translate([62+120+60-170,14+10-2,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8+30,y+8-20+1,700]);
for(i=[0:2]){
if(i==1){
 translate([62+120+50+(i*52)-170-2,14-3+35,-50])cylinder(r=3.7/2,h=200);
 translate([62+120+0+(i*52)-120-2,14-3,-50])cylinder(r=3.7/2,h=200);
}
}
 translate([62+120+0+(2*52)-120-2,14-3,-50])cylinder(r=3.7/2,h=200);

//conveyer_panel holes begin
translate([162,8-0.4,0])rotate([0,180,0]){
 //translate([23.158,9.088,-50.1])cylinder(r=4.2/2,h=200);
 translate([94.245,4.060,-50.1])cylinder(r=4.2/2,h=200);
 translate([5.346,36.9,-50.1])cylinder(r=4.2/2,h=200);
 translate([96.802,39.532,-50.1])cylinder(r=4.2/2,h=200);
}
//conveyer_panel holes end



/*
translate([0,30,0])rotate([0,0,90]){
for(i=[0:4]){translate([-17/2-25,-90+12.5+i/2-45+50*i,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
for(i=[0:4]){translate([-17/2-14+50,-90+12.5+i/2-45+50*i,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
translate([-17/2-14,-90-17/2-10,-1])rotate([0,0,0])cube([17+24,170,13]);
}
translate([230,55,0])rotate([0,0,90]){
for(j=[2:4]){
for(i=[0:6]){translate([0,-90-12.5-i/2-space*j,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
for(i=[0:6]){translate([0,-90+12.5+i/2-space*j,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
translate([-17/2,-90-17/2-space*j,-1])rotate([0,0,0])cube([17,17,13]);
}
for(i=[0:4]){translate([-17/2-25,-90+12.5+i/2-45+50*i,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
for(i=[0:4]){translate([-17/2-14+50,-90+12.5+i/2-45+50*i,-1])rotate([0,0,0])cylinder(r=3.7/2,h=10);}
translate([-17/2-14,-90-17/2-10,-1])rotate([0,0,0])cube([17+24,170,13]);
}
*/


/*
//URBEST�Inlet Module Plug Fuse Switch Male Power Socket 10A 250V 3 Pin IEC320 C14
translate([320,15,-0.1]){
cube([(48),(28),5]);
translate([(48)/2,(28)/2-(39)/2,0])cylinder(r=4.2/2,h=5);
translate([(48)/2,(28)/2+(39)/2,0])cylinder(r=4.2/2,h=5);
}
translate([70,20,-0.1]){
cube([(13),(12),5]);
translate([(13)/2-28.5/2,(12)/2,-0.1])cylinder(r=3.5/2,h=15);
translate([(13)/2+28.5/2,(12)/2,-0.1])cylinder(r=3.5/2,h=15);
}
*/
/*
//usb for azteeg x5 mini
translate([70+70,20,-0.1]){
cube([(13),(12),5]);
translate([(13)/2-28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
translate([(13)/2+28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
}

//usb for head camera
translate([70+70+120,20,-0.1]){
cube([(13),(12),5]);
translate([(13)/2-28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
translate([(13)/2+28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
}

//usb for microcontroller 1
translate([70+70+60,20,-0.1]){
cube([(13),(12),5]);
translate([(13)/2-28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
translate([(13)/2+28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
}

//usb for microcontroller 2
translate([70+70-60,20,-0.1]){
cube([(13),(12),5]);
translate([(13)/2-28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
translate([(13)/2+28.5/2,(12)/2,-0.1])cylinder(r=3.7/2,h=15);
}
*/
/*
translate([105.0,24,-0.1])cube([78,45.6,5]);
translate([142.2,17.2,-0.1])cylinder(r=7/2,h=5);
translate([142.2,79.6,-0.1])cylinder(r=7/2,h=5);
*/
}
}



module front_plate_x1(){
//length = 410.33
//width = 60.516
x = 58;
y = 35;
difference(){
cube([410.3,60.51,3]);

translate([62,14+14,-50])rotate([0,0,0])translate([-7,-7.5,-2.9])cube([58,18+3,700]);

//translate([62,14,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8,y+8,700]);

translate([-1,2.8,0]){
translate([62+120+60,14+10,-50])rotate([0,0,0])translate([-7,-7,-3.1])cube([x+8+30,y+8-20,700]);
for(i=[0:2]){
translate([62+120+50+i*50,14-3,-50])cylinder(r=3.7/2,h=200);
translate([62+120+50+i*50,14-3+35,-50])cylinder(r=3.7/2,h=200);
}
}
ff = 60;
translate([ff,19+10-15+2,-50])cylinder(r=4.2/2,h=200);
translate([ff+52.2,19+10-15+3,-50])cylinder(r=4.2/2,h=200);
translate([ff,19+10+15.3,-50])cylinder(r=4.2/2,h=200);
translate([ff+50.8,19+10+15.3,-50])cylinder(r=4.2/2,h=200);
}
}




module XY_bearings_Left_x1(){
//translate([0,-4.5,5])rotate([0,90,0])tslot20(200);

translate([0,15,-5])mirror([0,1,0]){
translate([(20.28*0.508),(48.24*0.508),5.3])color("silver")cylinder(r=(21.22*0.508)/2,h=5);
translate([(20.28*0.508),(48.24*0.508),-0.1]){
color("silver")cylinder(r=(11.22*0.508)/2,h=30);
color("silver")translate([0,0,20])cylinder(r=(13)/2,h=5);
color("black")translate([0,0,20])cylinder(r=(18)/2,h=5);
color("silver")translate([0,0,20])cylinder(r=(17)/2,h=1);
color("silver")translate([0,0,25])cylinder(r=(17)/2,h=1);
}
translate([(52.8*0.508),(62.52*0.508)+12,-0.1]){
color("silver")cylinder(r=(11.22*0.508)/2,h=20);
color("silver")translate([0,0,10])cylinder(r=(13)/2,h=5);
color("black")translate([0,0,10])cylinder(r=(18)/2,h=5);
color("silver")translate([0,0,10])cylinder(r=(17)/2,h=1);
color("silver")translate([0,0,15])cylinder(r=(17)/2,h=1);
}
}



scale([0.508,0.508,1])mirror([0,1,0])difference(){
union(){
color("silver")cube([61,63.60,3.3]);
translate([52.80,62.24,0])color("silver")cylinder(r=13,h=3.3);
}
translate([20.16,20.64,-0.1])cylinder(r=11.22/2,h=30);
translate([20.16,20.64,8.3-5])cylinder(r=21.22/2,h=5);
translate([53.28,20.32,-0.1-6])cylinder(r=9.25/2,h=12);
translate([53.28,20.32,5.5])cylinder(r=19.25/2,h=3);
translate([52.80,62.24,-0.1])cylinder(r=11.22/2,h=30);
}
}

module XY_bearings_Right_x1(){

mirror([0,0,0]){

translate([(20.28*0.508),(48.24*0.508),5.3])color("silver")cylinder(r=(21.22*0.508)/2,h=5);
translate([(20.28*0.508),(48.24*0.508),-0.1]){
color("silver")cylinder(r=(11.22*0.508)/2,h=30);
color("silver")translate([0,0,20])cylinder(r=(13)/2,h=5);
color("black")translate([0,0,20])cylinder(r=(18)/2,h=5);
color("silver")translate([0,0,20])cylinder(r=(17)/2,h=1);
color("silver")translate([0,0,25])cylinder(r=(17)/2,h=1);
}
translate([(52.8*0.508),(62.52*0.508),-0.1]){
cylinder(r=(11.22*0.508)/2,h=20);
color("silver")translate([0,0,10])cylinder(r=(13)/2,h=5);
color("black")translate([0,0,10])cylinder(r=(18)/2,h=5);
color("silver")translate([0,0,10])cylinder(r=(17)/2,h=1);
color("silver")translate([0,0,15])cylinder(r=(17)/2,h=1);
}
}

scale([0.508,0.508,1])mirror([0,0,0])difference(){
union(){
color("silver")cube([61,63.60,3.3]);
translate([52.8,62.52,-0.0])color("silver")cylinder(r=13,h=3.3);
}
translate([53.16,20.28,-0.1])cylinder(r=9.25/2,h=20);
translate([53.16,20.28,5.5])cylinder(r=19.25/2,h=3);

translate([20.28,48.24,-0.1])cylinder(r=11.22/2,h=20);
translate([20.28,48.24,8.3-5])cylinder(r=21.22/2,h=5);

translate([52.8,62.52,-0.1])cylinder(r=11.22/2,h=20);
}
}

module conveyer_slider_x4(){
th = 5;
//color("silver")
difference(){union(){
translate([-25,0,0])difference(){translate([0,-3,0])cylinder(r=20/2,h=th);}//translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);}
translate([25,0,0])difference(){translate([0,-3,0])cylinder(r=20/2,h=th);}//translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);}
translate([-15,29-20-5,0])rotate([0,0,0]){
translate([0,-17,0])cube([28,57.5+4,5+3]);
translate([0-15,-17+61.5/2-14,0])cube([28+32,28,5+3]);
//translate([14,5,0])cylinder(r=6.2/2,8);
//translate([14,5+16,0])cylinder(r=6.2/2,8);
translate([-106-4,102.5,0])rotate([0,0,-90]){
translate([175/2-8,240/2,0])cylinder(r=6.1/2,h=8+2.3+2);
translate([175/2,240/2+10,0])cylinder(r=6.1/2,h=8+2.3+2);
translate([175/2+8,240/2,0])cylinder(r=6.1/2,h=8+2.3+2);
}
}
translate([10,-6,0])rotate([0,0,63])cube([47,20,th]);
translate([-32,36,0])rotate([0,0,-63])cube([47,20,th]);
difference(){union(){
translate([-24,29-42,0])rotate([0,0,0])cube([48,20,th]);
translate([-24,29,0])rotate([0,0,0])cube([48,20,th]);
translate([-24,-10,0])rotate([0,0,0])cube([48,50,th]);
translate([10-15,-6+40,0])rotate([0,0,-63])cube([47,20,th]);
translate([-32+19,36-40,0])rotate([0,0,63])cube([47,20,th]);
}
translate([-25,0,0])translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);
translate([-15,22,0])translate([0,-3.115,-0.1])cylinder(r=(3.7)/2,h=36);
translate([25,0,0])translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);
}
//translate([0,38.94,0])difference(){cylinder(r=7.68+2., h=th);}
translate([-25,38.94,0])difference(){cylinder(r=10, h=th);}//translate([-1+1.5,0,-0.1])cylinder(r=(5.7)/2,h=36);}
translate([25,38.94,0])difference(){cylinder(r=10, h=th);}//translate([1-1.5,0,-0.1])cylinder(r=(5.7)/2,h=36);}
}
//translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=7);
translate([-25+1.5-0.5,38.94,0])translate([-1,0,-6.1]){cylinder(r=(5.7)/2,h=36);translate([0,0,10])cylinder(r=(10.2)/2,h=10);}
translate([25-1.5+0.5,38.94,0])translate([1,0,-6.1]){cylinder(r=(5.7)/2,h=36);translate([0,0,10])cylinder(r=(10.2)/2,h=10);}

translate([-25+1.5-0.5,0-3.2,0])translate([-1,0,-6.1]){cylinder(r=(5.7)/2,h=36);translate([0,0,10])cylinder(r=(10.2)/2,h=10);}
translate([25-1.5+0.5,0-3.2,0])translate([1,0,-6.1]){cylinder(r=(5.7)/2,h=36);translate([0,0,10])cylinder(r=(10.2)/2,h=10);}
translate([-15,22,0])translate([0,-3.115,-0.1])cylinder(r=(3.7)/2,h=36);

translate([25-1.5+0.5-15,0-3.2-3,0])translate([1,0,-6.1]){cylinder(r=(3.2)/2,h=36);}
translate([25-1.5+0.5-37,0-3.2-3,0])translate([1,0,-6.1]){cylinder(r=(3.2)/2,h=36);}

translate([25-1.5+0.5-15,0-3.2-3+49,0])translate([1,0,-6.1]){cylinder(r=(3.2)/2,h=36);}
translate([25-1.5+0.5-37,0-3.2-3+49,0])translate([1,0,-6.1]){cylinder(r=(3.2)/2,h=36);}


}
}

module conveyer_slider_x4_orig(){
color("silver")difference(){union(){
translate([-25,0,0])difference(){translate([0,-3,0])cylinder(r=20/2,h=3);translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);}
translate([25,0,0])difference(){translate([0,-3,0])cylinder(r=20/2,h=3);translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);}
translate([-15,29-20-5,0])rotate([0,0,0]){
translate([0,-17,0])cube([28,57.5+4,5+3]);
//translate([14,5,0])cylinder(r=6.2/2,8);
//translate([14,5+16,0])cylinder(r=6.2/2,8);
translate([-106-4,102.5,0])rotate([0,0,-90]){
translate([175/2-8,240/2,0])cylinder(r=6.1/2,h=8+3);
translate([175/2,240/2+10,0])cylinder(r=6.1/2,h=8+3);
translate([175/2+8,240/2,0])cylinder(r=6.1/2,h=8+3);
}
}
translate([10,-6,0])rotate([0,0,63])cube([47,20,3]);
translate([-32,36,0])rotate([0,0,-63])cube([47,20,3]);
difference(){union(){
translate([-24,29-42,0])rotate([0,0,0])cube([48,20,3]);
translate([-24,29,0])rotate([0,0,0])cube([48,20,3]);
translate([-24,-10,0])rotate([0,0,0])cube([48,50,3]);
translate([10-15,-6+40,0])rotate([0,0,-63])cube([47,20,3]);
translate([-32+19,36-40,0])rotate([0,0,63])cube([47,20,3]);
}
translate([-25,0,0])translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);
translate([25,0,0])translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=36);
}
translate([0,38.94,0])difference(){cylinder(r=7.68+2., h=3);
}
translate([-25,38.94,0])difference(){cylinder(r=10, h=3);translate([-1+1.5,0,-0.1])cylinder(r=(5.7)/2,h=36);}
translate([25,38.94,0])difference(){cylinder(r=10, h=3);translate([1-1.5,0,-0.1])cylinder(r=(5.7)/2,h=36);}
}
//translate([0,-3.115,-0.1])cylinder(r=(5.7)/2,h=7);
translate([-25+1.5,38.94,0])translate([-1,0,-6.1])cylinder(r=(5.7)/2,h=36);
translate([25-1.5,38.94,0])translate([1,0,-6.1])cylinder(r=(5.7)/2,h=36);
}
}













//projection(cut = false)slider_x4();
//slider_x4();
module slider_x4(){
color("silver")difference(){union(){
//translate([-34-0.65,39-0.5,0])cube([69.3,1,25]);
//translate([-2+2,-12+0.065,0])cube([1,60.94+26,25]);

difference(){cylinder(r=24/2,h=3.3);translate([0,-3.115,-0.1])cylinder(r=(5.9+0.8)/2,h=36);}
translate([-14,29-20,0])rotate([0,0,0])cube([28,40,3.3]);
translate([-24,29,0])rotate([0,0,0])cube([48,20,3.3]);
translate([10,-6,0])rotate([0,0,63])cube([47,20,3.3]);
translate([-32,36,0])rotate([0,0,-63])cube([47,20,3.3]);
translate([0,38.94,0])difference(){cylinder(r=7.68+2., h=3.3);
for(i=[-3,-2,-1,0,1,2,3]){
translate([0,i,-0.1])cylinder(r=(5.5+0.8)/2,h=6);//translate([0,1,-0.1])cylinder(r=(5+0.8)/2,h=6);
}
translate([0,-42,-0.1])cylinder(r=(5.5+0.8)/2,h=6);//translate([0,1,-0.1])cylinder(r=(5.5+0.8)/2,h=6);
}

//translate([-23.56,38.94,0])difference(){cylinder(r=10, h=3.3);translate([-1,0,-0.1])cylinder(r=(5.7+0.8)/2,h=6);}
//translate([23.56,38.94,0])difference(){cylinder(r=10, h=3.3);translate([1,0,-0.1])cylinder(r=(5.7+0.8)/2,h=6);}
//For 3D printing I like this
//translate([-23.56-0.5,38.94,0])difference(){cylinder(r=10, h=3.3);translate([-1,0,-0.1])cylinder(r=(5.7+0.8)/2,h=6);}
//translate([23.56+0.5,38.94,0])difference(){cylinder(r=10, h=3.3);translate([1,0,-0.1])cylinder(r=(5.7+0.8)/2,h=6);}
//For milling
translate([-25,38.94,0])difference(){cylinder(r=10, h=3.3);translate([-1,0,-0.1])cylinder(r=(5.9+0.8)/2,h=36);}
translate([25,38.94,0])difference(){cylinder(r=10, h=3.3);translate([1,0,-0.1])cylinder(r=(5.9+0.8)/2,h=36);}
}
translate([0,-3.115,-0.1])cylinder(r=(5.7+0.8)/2,h=6);
translate([0,38.94,0]){
for(i=[-1,0,1]){
translate([0,i,-0.1])cylinder(r=5.5/2,h=6);//translate([0,1,-0.1])cylinder(r=(5+0.8)/2,h=6);
}
}
//For 3D printing I like this
//translate([-23.56-0.5,38.94,0])translate([-1,0,-6.1])cylinder(r=(5.7+0.8)/2,h=16);
//translate([23.56+0.5,38.94,0])translate([1,0,-6.1])cylinder(r=(5.7+0.8)/2,h=16);
//For milling
translate([-25,38.94,0])translate([-1,0,-6.1])cylinder(r=(5.9+0.8)/2,h=36);
translate([25,38.94,0])translate([1,0,-6.1])cylinder(r=(5.9+0.8)/2,h=36);
}
}



module conveyer_connector_tslots(){

translate([0,0,20]){
//1.5 -- HFS5-2020-56-TPW-Z5-XA28 //we got to add this one so this one needs to be changed
translate([20+175,400-20,-5]){
rotate([0,0,0])tslot20(63.5);
//translate([15,0,63.5/2-1.75])rotate([-90,0,0])cylinder(r=5.7/2,h=400);
}

//3.1 This one is for supportng the back conveyer rail
//this one needs to be changed 
//HFS5-2020-160-TPW
translate([20+200-25,400-20+186-1,320])rotate([90,90,0]){
tslot20(160);
}
//3.2
translate([20+200-25,400-20+186-1,320-280])rotate([90,90,0]){
tslot20(160);
}
}

//SCTL1
//this one needs to be changed
//HFS5-2020-400-TPW-Z5-XA108-XB173.5-XC224.5-XE275.5-XE326.5-XF390
//This is the correct one
//HFS5-2020-400-TPW-Z5-XA108.5-XB159.5-XC210.5-XE261.5-XE312.5-XF390
translate([195,560,-65])tslot20(400);
//translate([195+15,760,325])rotate([90,0,0])cylinder(r=5.7/2,h=400);
for(i=[0:3]){
echo(108.5+(i*56)+65-20);
//translate([195+15,760,-65+108.5+(i*56)+65-20])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
}
//translate([195+15,760,-65+110])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
//HFS5-2020-400-TPW-Z5-XA110-XB173.5-XC224.5-XD275.5-XE326.5-XF390

//SCTL1

translate([20,380,105-3.5]){
translate([0,0,-6]){
//SCTL2 will be moved to conveyer_caller_tslots
//SCTL2 -- this one needs to be changed

//remove 190
//HFS5-2020-400-TPW-Z5-XA190 
//rotate([0,90,0])tslot20(400);
//translate([190,15,-400])rotate([0,0,0])cylinder(r=5.7/2,h=1000);
}
}
}



//gantry();
//import("pngfiles/bottom.stl");

module gantry(){
translate([0,0,20]){
//1 -- HFS5-2020-400-TPW-XA22-XB370-YA190 //this one needs to be changed
//blah
translate([20,400-20,0]){
rotate([0,90,0])tslot20(400);
/*
translate([22,400,-15])rotate([90,0,0])cylinder(r=5.7/2,h=500);
translate([300+70,400,-15])rotate([90,0,0])cylinder(r=5.7/2,h=500);
translate([190,400-385,-15-200])rotate([0,0,0])cylinder(r=5.7/2,h=500);
*/
}


//3 -- 400 threaded profiles
//HFS5-2020-400-TPW.stl
translate([20,0,0])rotate([0,90,0])tslot20(400);
translate([20,400-20,320])rotate([0,90,0]){
//******** this hole needs to be added *****************
// so this one needs to be changed

//3.1 
//HFS5-2020-400-TPW-Z5-XA22-XB190-XC370
tslot20(400);
/*
translate([15-10+10,70+200,190])rotate([90,0,0])cylinder(r=5.7/2,h=300);
translate([15-10+10,70+200+40,370])rotate([90,0,0])cylinder(r=5.2/2,h=400);
translate([15-10+10,70+200+40,22])rotate([90,0,0])cylinder(r=5.2/2,h=400);
*/
}
translate([20,0,320])rotate([0,90,0])tslot20(400);

//2 -- 400 drilled profiles at 10mm
//top 400mm rail
//HFS5-2020-400-TPW-XA10-XB390-YA10-YB390
translate([-5,400-15+20,320])rotate([90,90,0])tslot20(400);
translate([-5+420,400-15+20,320])rotate([90,90,0])tslot20(400);

//3.01 -- 360 threaded profiles
//HFS5-2020-360-TPW
translate([-5,400-15,0])rotate([90,90,0])tslot20(360);
translate([-5+420,400-15,0])rotate([90,90,0])tslot20(360);

//3.5 
//HFS5-2020-380-TPW-Z5-XA70-YA70
translate([-5,400-20,-25-60])rotate([0,0,0])tslot20(380);
//translate([-5+15,400-20+15+100,-15-70+70])rotate([90,0,0])cylinder(r=5.7/2,h=600);

//3.6 
//HFS5-2020-380-TPW-Z5-XA70-YA70
translate([-5+420,400-20,-25-60])rotate([0,0,0])tslot20(380);

//4 -- 380 threaded profiles at 70mm
//HFS5-2020-380-TPW-XA70-YA70
translate([-5+420,0,-25-60])rotate([0,0,0])tslot20(380);
translate([-5,0,-25-60])rotate([0,0,0])tslot20(380);

}
}




module linearactuator_filament_encodershuttle_filamentclamp(){
translate([-30+11.5,64,28])difference(){
cube([22,15+5-4+3-5,6-1.75-1+0.5]);
translate([18,6-1.2,-2])cylinder(r=3.7/2,h=20);
translate([18-13/2,6+10,3.75])rotate([90,90,0])cylinder(r=1.8/2,h=20);
translate([18-13,6-1.2,-2])cylinder(r=3.7/2,h=20);
}
}
//filament_linearactuator();
//rotate([0,180,0])filament_clamp();

//linearactuator_endstop_encoder();
//translate([-43+5.5+0.5+5,11-84,-3.6+10])translate([5-14+17.5-3,20+6-50,-5+14-2.75+2-3])cube([23+3-5,134,3]);

module motorclamp_filament_driver(){
//shorternema17();
cc = 0.8;color([cc,cc,cc])translate([-21+5,-40,20-1.5])color("grey")thinnermotormount();
difference(){
union(){
difference(){
color([cc,cc,cc])translate([-21-29+0.5,-21,3-48])cube([5,42,48]);
translate([-21-29+0.5-2,-21+9,3-48+9])rotate([0,90,0])cylinder(r=4.7/2,h=30);
translate([-21-29+0.5-2,-21+32,3-48+9])rotate([0,90,0])cylinder(r=4.7/2,h=30);
}
color([cc,cc,cc])translate([0,0,0])translate([-21-29+0.5,-21,3-20])cube([20+8+5,42,20+6-5]);
color([cc,cc,cc])translate([0,0,0])translate([-21-29+0.5,-21,0])cube([28+2+5,42,9-5]);
}
rotate([0,0,0])cylinder(r=20/2,h=30);
}
}
module linearactuator_endstop_encoder(){
translate([-100+15,18-170,20]){
translate([-4,-1,0])shorternema17();
difference(){
union(){
//compact extruder
color("gainsboro")translate([-21+20-3,-21+20,3+6-5])compact_extruder();
//biqu extruder
/*
difference(){
translate([-21,-21,3+6])color("grey")cube([42,42,15]);
translate([-21+35,-21+5.5,3+6-20])cylinder(r=3.7/2,h=200);
translate([-21+35-30,-21+5.5,3+6-20])cylinder(r=3.7/2,h=200);
translate([-21+35,-21+5.5+30,3+6-20])cylinder(r=3.7/2,h=200);
translate([-21+35-30,-21+5.5+30,3+6-20])cylinder(r=3.7/2,h=200);
}
*/
//begin Other motor mount
translate([-21-29+0.5+49.5,-21-1+23,3-48+45])filament_driver_assy_motormount();
/*
color("pink")difference(){
//color([cc,cc,cc])
translate([-21-29+0.5,-21-1,3-48])cube([5,42,48]);
translate([-21-29+0.5-2,-21+9,3-48+9])rotate([0,90,0])cylinder(r=4.7/2,h=30);
translate([-21-29+0.5-2,-21+32,3-48+9])rotate([0,90,0])cylinder(r=4.7/2,h=30);
}
cc = 0.8;color([cc,cc,cc])translate([0,0-1,0])translate([-21-29+0.5,-21,3-20])cube([20+8+5,42,20+6-5]);
cc = 0.8;color([cc,cc,cc])translate([0,0-1,0])translate([-21-29+0.5,-21,0])cube([28+2+5+32,42,9-5]);
//end Other motor mount
*/
//translate([0,31,10.5+6])rotate([90,0,0])color("lightgrey")cylinder(r=10/2,h=30);
translate([0,31+20,10.5+6])rotate([90,0,0])color("white")cylinder(r=6/2,h=35);
translate([0,31+100,10.5+6])rotate([90,0,0])color("black")cylinder(r=2/2,h=250);
//translate([0,31-31,10.5+6])rotate([90,0,0])color("lightgrey")cylinder(r=10/2,h=30);
translate([0,31+20-82+1,10.5+6])rotate([90,0,0])color("white")cylinder(r=6/2,h=90);
translate([0,31+20-170,10.5+6])rotate([90-45,0,-45])color("white")cylinder(r=6/2,h=90);
}
//rotate([0,0,0])cylinder(r=20/2,h=30);
}
}

//this right here for annotation
translate([-99,0,-1.5])rotate([0,90,0]){
translate([-53,-114,-13])linearactuator_filament_encodershuttle();
translate([-55-2.5,30-1,7])rotate([0,0,180])endstop_for_linearactuator();
translate([0,-0,0])color("lightgrey")linearactuator_igus_slidermount_encoder();
translate([-43+5.5+0.5,11-84,-3.6])color("lightgrey")linearactuator_igus_slidermount_encoder_part();
ed = 0.4; color([ed,ed,ed])
//color("pink")
translate([-43+5.5+0.5,11-84-5,-3.6+3])cube([28,100,3]);
translate([-38,-6,3])color("grey")igus_lowprofile_assy();
}

//spectra encoder
//translate([-43+5.5+0.5+5,11-84,-3.6+10])translate([5-14+17.5-3,20+6-50,-5+14-2.75+2-3])cube([23+3-5,134,3]);
}



module endstop_for_linearactuator(){
//ee = 0; color([ee,ee,ee])translate([-5,0,0])cube([5,10,20]);

ed = 0.5;color([ed,ed,ed])difference(){
union(){
cube([5,10,20]);
translate([-0,0,-10])cube([5,10,10]);
translate([-4-1.25,-9,-10])cube([15,28,5]);
}
translate([2.5,-4.9,-20])cylinder(r=4.7/2,h=20);
translate([2.5,-4.9+20,-20])cylinder(r=4.7/2,h=20);
translate([-2,5,16])rotate([0,90,0]){cylinder(r=3/2,h=40);translate([0,0,4])cylinder(r=5.2/2,h=3+4,$fn=6);}
translate([-2,5,6])rotate([0,90,0]){cylinder(r=3/2,h=40);translate([0,0,4])cylinder(r=5.2/2,h=3+4,$fn=6);}
}
}



module endstop_for_conveyer(){

//for graphical purposes
//color("black")translate([5,-2.5,0])cube([10,15,30]);

/*
color([185/255,185/255,185/255])difference(){
union(){
cube([5,10,20]);
translate([2.5-17-5.6/2,-9.1,-10])cube([5.6,10,9]);
translate([-0,0,-10])cube([5,10,10]);
translate([-4-1.25-5-10,-9+9,-10])cube([10+15,28-9,5]);
}
//translate([2.5-17,-4.9+4,-20])cylinder(r=4.7/2,h=20);
translate([2.5-17,-4.9+15,-20])cylinder(r=4.7/2,h=20);
translate([-2,5,16])rotate([0,90,0]){cylinder(r=3/2,h=40);}
translate([-2,5,6])rotate([0,90,0]){cylinder(r=3/2,h=40);}
}
*/
difference(){
mirror([0,1,0])import("files/endstop_y.stl");
translate([62.5,-30,-0.1])cube([20,30,15]);
}
}





module filament_clamp(){
translate([-0.5,3,34.3])
difference(){
cube([22,10,3]);
translate([4.5,5,-10])cylinder(r=3.7/2,h=20);
translate([4.5+13,5,-10])cylinder(r=3.7/2,h=20);
translate([11,5+10,0])rotate([90,90,0])cylinder(r=1.75/2,h=20);
}
}
/*
//filament_linearactuator();
x = 8;
y = -30;
corexy_beltsetup(x,y);
translate([0,y,0]){
x_axis(x);
translate([20,217,400-50])rotate([0,0,-90])x_encoder_support();
}
*/
module filament_linearactuator(){

//translate([-40+2,-25+18.8,3])import("igus_sliders/TS_04_09_50_3.stl");
//translate([0,-10,3]){translate([-38,-40+18,4.5])import("igus_sliders/TW_04_09_4.stl");}
//translate([-49,-30-8,6])syringeplunger_formed_modular_linearactuator_igus_TW_04_07();
//translate([-38,-6,0])igus_lowprofile_assy();

sgg = 0.6; color([sgg,sgg,sgg])
//color("gainsboro")
shuttle_front();

ssgg = 0.8; color([ssgg,ssgg,ssgg])
//color("lime")
translate([-25,5,41])rotate([-90,0,0])import("files/gt2belt_holder.stl");


//this is the linear actuator part
translate([48.47-80+4,92+3-130-2,16.0])rotate([0,0,180])smaller_igus_slidermount();
translate([48.5,-4.8,10]){
translate([-40+2,-25+18.8,3])
color("silver")
import("igus_sliders/TS_04_09_50_3.stl");
translate([0,-10,3]){translate([-38,-40+18,4.5])
color("silver")
import("igus_sliders/TW_04_09_4.stl");}
}
shh = 0.9;color([shh,shh,shh])
color("gainsboro")
translate([-0.5,-37,22])filament_linearactuator_shuttle();
}




module linearactuator_cordglide(){

difference(){union(){
//rotate([0,90,0])tslot20(200);
translate([0,-0,-25])cube([16,5,20+0]);
translate([0,-15-5-20,-35+25])cube([16,25+20,5]);
//translate([11+3,7.5-0.765/2,-4])
translate([-0,4,-18+0.1])cube([4,6,5.765]);
}
translate([8,-13-20,-15-0])rotate([0,0,0])cylinder(r=10/2,h=20);
translate([8+3,10,-15])rotate([90,0,0])cylinder(r=4.7/2,h=20);
}
}



module cordclamp(){
//rotate([0,90,0])tslot20(200);
difference(){
cube([50,18,3]);
translate([25,18,5])rotate([90,0,0])cylinder(r=7,h=18);
translate([7,9,-3])cylinder(r=4.7/2,h=20);
translate([50-7,9,-3])cylinder(r=4.7/2,h=20);
}
difference(){
translate([25,18,5])rotate([90,0,0])cylinder(r=10,h=18);
translate([25,18,5])rotate([90,0,0])cylinder(r=7,h=18);
translate([0,0,-30])cube([50,18,30]);
}
}



module raspi_azteeg_baseplate(){
difference(){union(){
translate([40-4,27,-7])raspi_plate();
raspi_smoothie_base_plate();
translate([-25,0,0])azteeg_controller();
}
translate([97.5,30.2+48,-10])cylinder(r=3.7/2,h=60);
}
}
//import("raspi_smartfriendz.stl");

module azteeg_controller(){
//to show PCB just this
//color("green")translate([51,-43,0])cube([108,70,4]);
translate([70,-30,10])color("black")rotate([0,0,0])mirror([0,0,0])write("BOM_azteeg",h=8);


difference(){
union(){
//import("raspi_smartfriendz.stl");
translate([51,-43,-7])cube([108,70,4]);
translate([51,-43,-7]){
translate([7,13,0])cylinder(r=6.7/2,h=8);
translate([7,13+48,0])cylinder(r=6.7/2,h=8);
translate([7+92,13,0])cylinder(r=6.7/2,h=8);
translate([7+92,13+48,0])cylinder(r=6.7/2,h=8);
}
}
translate([51+10,-43+10,-9])cube([108-25,70-20,14]);
translate([51,-43,-17]){
translate([7,13,0])cylinder(r=4.2/2,h=40);
translate([7,13+48,0])cylinder(r=4.2/2,h=40);
translate([7+92,13,0])cylinder(r=4.2/2,h=40);
translate([7+92,13+48,0])cylinder(r=4.2/2,h=40);
}
}
} 


module raspi_smoothie_base_plate(){
 translate([108-5-30+8-20+60,10,-7])cube([30,25,4]);
difference(){
union(){
 translate([108-5-30+8-20,-50,-7])cube([90,145,4]);
}
 translate([108-5-30,-30,-10])cube([70,105,14]);
 translate([108-5-30-4,-30-15,-10])cylinder(r=3.7/2,h=20);
 translate([108-5-30-4+76,-30-15,-10])cylinder(r=3.7/2,h=20);
 translate([0,135,0]){ 
 translate([108-5-30-4,-30-15,-10])cylinder(r=3.7/2,h=20);
 translate([108-5-30-4+76,-30-15,-10])cylinder(r=3.7/2,h=20);
 }
}
}
module raspi_plate(){
difference(){
union(){
cube([85,56,4]);
translate([3.5,3.5,3]){
cylinder(r=7/2,h=3);
translate([58,0,0])cylinder(r=7/2,h=3);
translate([0,48,0])cylinder(r=7/2,h=3);
translate([58,48,0])cylinder(r=7/2,h=3);
}
}
translate([10,10,0])cube([85-20,56-20,4]);
translate([3.5,3.5,0]){
cylinder(r=3/2,h=20);
translate([58,0,0])cylinder(r=3/2,h=20);
translate([0,48,0])cylinder(r=3/2,h=20);
translate([58,48,0])cylinder(r=3/2,h=20);
}
}
}


module azteeg_x5_mini_plate(){
translate([51,22,0])rotate([0,0,90])azteegx5_case();
}

//translate([-0.235,-20.2,0])cube([6,10,20]);


module smoothie_raspi(){
import("files/v1.STL");
}



module wiper_clamp(){
//for display
//translate([7.5,10+37.5+2+2.5,-10])cylinder(r=6.3/2,h=20);

difference(){
union(){
cube([15+9,55,6]);
translate([0,40+2,-6])cube([15,15+2.5,6+6]);
//5.765
translate([11+3,7.5-0.765/2,-4])cube([4+6-2,5.765,6]);
}
translate([20-6,20,-10.1])cube([15+9,55,17]);
translate([7.5,10,-6])cylinder(r=4.7/2,h=12);
translate([7.5,10+37.5+2+2.5,-10])cylinder(r=5.5/2,h=22);
}
}



module wiper_clamp_yaxis(){
translate([27.5,-7.5,0])rotate([0,0,90])difference(){
union(){
translate([0,3,0])cube([15+9-9,55-3,6]);
translate([0,40+2+2+1,-6-12-4])cube([15,15+2.5,6+6+12+8-4]);
//5.765
//translate([11+3,7.5-0.765/2,-4])cube([4+6,5.765,6]);
}
//translate([20-6,20,-10.1])cube([15+9,55,17]);
translate([7.5,30,-6])cylinder(r=5.7/2,h=12+7);
translate([7.5,10+37.5+2+2.5+1.5,-35])cylinder(r=5.6/2,h=122);
}
}









module shuttle_back(){
//translate([-30,39-7+15,28-26])rotate([0,90,0])tslot20(100);

//translate([24.8,0,3])rotate([0,180,0])color("gainsboro")import("head_back.stl");
translate([-28.52,-10,0])difference(){
union(){
translate([9,0,0])cube([73,53,3]);
translate([19-10,20,0])cube([53,60,3]);
translate([19-10+6,66,0])cube([13,13,3.6]);
translate([19-10+36,66,0])cube([13,13,3.6]);
//translate([25-2,15+9,0])cube([25+6,13+16,3+7]);
}
translate([0,-16,-0.3])cube([33,23,10]);
translate([50,-9,-0.3])cube([33,23,10]);
//bearings screws
translate([60-8.5,72.35,-4-4.4])cylinder(r=5.7/2,h=12, $fn=30);
translate([30-8.6,72.35,-4-4.4])cylinder(r=5.7/2,h=12, $fn=30);
translate([42-1.1,5.15,-4])cylinder(r=5.7/2,h=30, $fn=30);
translate([42-1.1+25+1,5.15+42,-4])cylinder(r=5.7/2,h=30, $fn=30);
translate([42-1.1-25-1,5.15+42,-4])cylinder(r=5.7/2,h=30, $fn=30);
}

//belt clamp left side
translate([5,0,0])union(){
translate([25,17.32+1.38,0])cube([15.6+7,3.62,10]);
translate([19.5,12.7,0])difference(){{translate([-1,0,0])cube([6+2,6,10]);translate([3.2,3,0]){cylinder(r=3/2,h=20);
translate([0,0,0])cylinder(r=6.8/2,h=10-7,$fn=6);
}}}
translate([25,17.32+1.38-14,0])difference(){cube([5.5,13.62+1,10]);translate([-10,5,6.5])rotate([90,0,90]){cylinder(r=3/2,h=30,$fn=30);

//translate([0,0,9-9])cylinder(r=6.8/2,h=13,$fn=6);
}}
}

//translate([24,12.8,0])difference(){cube([6,6,10]);translate([3.2,3,0]){cylinder(r=3/2,h=20);cylinder(r=6.8/2,h=13,$fn=6);}}


//belt clamp right side
translate([5,0,0]){translate([25-45.84-7.3+7.4,17.32+1.38,0])cube([15.6,3.62,10]);translate([25-35.73,17.32+1.38-14-4,0])difference(){translate([0.6,4.1,0])cube([4.64+0.2,13.62+6-4,10]);translate([-10,5+4,6.5])rotate([90,0,90]){cylinder(r=3/2,h=30,$fn=30);
//translate([0,0,13])cylinder(r=6.8/2,h=3,$fn=6);
}}}


}

module backextruder_clamp(){
difference(){
union(){
translate([0,40-1,0])cube([15,6,20]);
cube([15,55,6]);
translate([11,7.5-0.765/2,-2])cube([4,5.765,5]);
}
translate([7.5,10,-6])cylinder(r=4.7/2,h=12);
translate([7.5,50,22-6])rotate([90,0,0])cylinder(r=4.7/2,h=30);
}
}






module shuttle_front(){
//color("gainsboro")import("head_front.stl");
translate([-28.5,-10,0])difference(){
union(){
cube([73,53,3]);
translate([25-2,15+9,0])cube([25+6,13+16,3+7]);
}
translate([25-2,15+9+10,3])rotate([0,0,60])cube([25+6,13+16,3+7]);
translate([25-2+16,15+9+10+26,3])rotate([0,0,-60])cube([25+6,13+16,3+7]);
translate([0-3,-16-4,-0.3])cube([33+3,23,10]);
translate([47,-9,-0.3])cube([33,23,10]);
translate([32,32,-3]){
cylinder(r=2.8/2,h=30,$fn=30);
translate([14,0,0]){cylinder(r=2.8/2,h=30,$fn=30);}
translate([7,14,0]){cylinder(r=2.8/2,h=30,$fn=30);}
}
//bearings screws
translate([42-1.1,5.15,-4])cylinder(r=5.7/2,h=30, $fn=30);
translate([42-1.1+25+1,5.15+42,-4])cylinder(r=5.7/2,h=30, $fn=30);
translate([42-1.1-25-1.,5.15+42,-4])cylinder(r=5.7/2,h=30, $fn=30);

translate([3.2,9,9-40])cylinder(r=7/2,h=130,$fn=6);
translate([3.2+17,9,9-40])cylinder(r=7/2,h=130,$fn=6);
}

//belt clamp left side
union(){translate([25,17.32+1.38,0])cube([15.6,3.62,10]);translate([25,17.32+1.38-14,0])difference(){cube([4.64,13.62+1,10]);translate([-10,5,6.5])rotate([90,0,90]){cylinder(r=3/2,h=30,$fn=30);translate([0,0,9])cylinder(r=6.6/2,h=3,$fn=6);}}
}

//belt clamp right side
translate([25-45.84-7.3,17.32+1.38,0])cube([15.6+7.3,3.62,10]);translate([25-35.73,17.32+1.38-14-4,0])difference(){translate([0,4.1,0])cube([4.64+0.8,13.62+6-4,10]);translate([-10,5+4,6.5])rotate([90,0,90]){cylinder(r=3/2,h=30,$fn=30);translate([0,0,13])cylinder(r=6.6/2,h=3,$fn=6);}}

//inductor mount
translate([25-45.84-7.3,17.32+1.38-21.61,0])difference(){
translate([-2,-4,0])cube([15.6+7.3+4,7.8+4,10+6-0.5]);
//translate([2.8,4-.08-2,0]){translate([0,0,-10])cylinder(r=3/2,h=40,$fn=30);translate([0,0,10]){cylinder(r=6.8/2,h=3,$fn=6);translate([0-5.5,-2.94,0])cube([6.8,5.88,3.2]);}}
translate([2.8,4-.08-2,0]){translate([0,0,-10])cylinder(r=3/2,h=40,$fn=30);translate([0,0,-1]){cylinder(r=7/2,h=13,$fn=6);}}
//translate([0-5.5,-2.94,0])cube([6.8,5.88,3.2]);}}
//translate([2.8+20-2.8,4-.08-2,0]){translate([0,0,-10])cylinder(r=3/2,h=40,$fn=30);translate([0,0,10]){cylinder(r=6.8/2,h=3,$fn=6);translate([0.5,-2.94,0])cube([6.8,5.88,3.2]);}}
translate([2.8+20-2.8,4-.08-2,0]){translate([0,0,-10])cylinder(r=3/2,h=40,$fn=30);translate([0,0,-1]){cylinder(r=7/2,h=13,$fn=6);}}
translate([11.45,20,16])rotate([90,0,0])cylinder(r=11.5/2,h=40);
}
}

module slide_conveyer_caller(z,xx,xp,sph){
translate([-36.25+0.5-60+30+215,-33+580-4,90])rotate([-90,0,90])conveyer_solenoid_pcb();

//SCTL1 will be moved to conveyer_caller_tslots
//SCTL1
//this one needs to be changed
//HFS5-2020-400-TPW-Z5-XA108-XB173.5-XC224.5-XE275.5-XE326.5-XF390
translate([145+30+25-5,560,-65])tslot20(400);
/*
translate([145+30+25-5+15,560+200,-65+327+63])rotate([90,0,0])cylinder(r=5.7/2,h=400);
translate([145+30+25-5+15,560+200,-65+327-.5])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
translate([145+30+25-5+15,560+200,-65+277-1.5])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
translate([145+30+25-5+15,560+200,-65+227-2.5])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
translate([145+30+25-5+15,560+200,-65+177-3.5])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
translate([145+30+25-5+15,560+200,-65+108])rotate([90,0,0])cylinder(r=5.7/2,h=1000);
*/


translate([20,380,105-3.5]){
translate([0,0,-6]){
//SCTL2 will be moved to conveyer_caller_tslots
//SCTL2 -- this one needs to be changed
//HFS5-2020-400-TPW-Z5-XA190 
rotate([0,90,0])tslot20(400);



//translate([40+150,15-0,-100])cylinder(r=5.7/2,h=3000); //we need this screw
translate([0,3,-205])rotate([0,-90,0])color("gainsboro")tslot20innerbracket();
translate([220,3,-25])rotate([0,0,0])color("gainsboro")tslot20innerbracket();
}
translate([150-22+30+20,203+5-3,-3])rotate([0,0,-90])color("gainsboro")tslot20innerbracket_conveyer();
translate([150+30+22-0,-203+30-2,-3])rotate([0,0,90])color("gainsboro")tslot20innerbracket_conveyer();
}
//SCTL3,4,5,6
translate([0+25+25-5,0,10-3.5-8-12]){
for(i=[0:3]){
if(i==xp){
 translate([0,0,0])slide_conveyer(xx-255,117+(i*56),1,z,sph);
}
else {
 slide_conveyer(xx,117+(i*56),0,z,sph);
}
}
}
}




//color("silver")pressurecompensation_bottle();
//wash_waste_panel();
//washdry_pcv_pump_enclosure();
module pressure_compensation_bottle(){
translate([-695,120,210])rotate([0,0,90]){
//translate([-93,0,-170])tslot20(380);
translate([45-45,-45+45,96])rotate([0,0,90])
{
color("silver")nalgene_liquidsensor();
color("silver")nalgene_liquidsensor_cap();
}
translate([-45,45,-100])rotate([90,0,0]){
color("lightblue")import("/Users/richard/Documents/009Reprapcatcube010715/bottle.STL");
color("lightblue")translate([6.5,0,6.5])translate([0,180,0])import("/Users/richard/Documents/009Reprapcatcube010715/cap.STL");
}
//import("/Users/richard/Documents/009Reprapcatcube010715/3dprinting/pressurecompensation_bottle.stl");
//color("silver")import("/Users/richard/Documents/009Reprapcatcube010715/3dprinting/pressurecompensation_bottle.stl");
color("silver")pressurecompensation_bottle();
}
}


module pressurecompensation_bottle(){
difference(){
union(){
cylinder(r=55,10);
translate([-10,38,0])cube([20,25,25]);
translate([-70,-1,0])cube([30,20,30]);
translate([-70,-1-55,0])cube([10,75,30]);
translate([-70,-1-55,0])cube([10,18,40]);
}
cylinder(r=93/2,40);
translate([-5,30,-3])cube([10,40,29]);
translate([-80,-47,10])rotate([90,0,90]){cylinder(r=5.6/2,h=50);translate([0,0,15.1])cylinder(r=10.2/2,h=5);}
translate([-80,-47,30])rotate([90,0,90]){cylinder(r=5.6/2,h=50);translate([0,0,15.1])cylinder(r=10.2/2,h=5);}
//translate([-80,0,20])rotate([90,0,90])cylinder(r=5.6/2,h=50);
//translate([-65,0,20])rotate([90,0,90])cylinder(r=11.6/2,h=50);
translate([-30,55,15])rotate([90,0,90])cylinder(r=4.6/2,h=50);
}
}


module wash_waste_panel(){
color("white"){
translate([20,15,-0.1])cylinder(r=11.5/2,h=13);
translate([38,15,-0.1])cylinder(r=11.5/2,h=13);
}
difference(){
color("gray")cube([60,30,3]);
translate([7,15,-0.1])cylinder(r=3.7/2,h=4);
translate([60-7,15,-0.1])cylinder(r=3.7/2,h=4);
translate([20,15,-0.1])cylinder(r=6.5/2,h=20);
translate([38,15,-0.1])cylinder(r=6.5/2,h=20);
}
}

module syringepump_tube_panel(){
/*
color("white"){
translate([30,15,-0.1-10])cylinder(r=11.5/2,h=23);
//translate([38,15,-0.1])cylinder(r=11.5/2,h=13);
}
*/
difference(){
//color("gray")
cube([60,30,3]);
translate([7,15,-0.1])cylinder(r=3.7/2,h=4);
translate([60-7,15,-0.1])cylinder(r=3.7/2,h=4);
translate([30,15,-0.1])cylinder(r=6.5/2,h=20);
//translate([38,15,-0.1])cylinder(r=6.5/2,h=20);
}
}


module lasermount_connector(){
union(){
difference(){
union(){
translate([-36,40-2,13])rotate([-90,0,0])import("stls/mirrorball.stl"); //mirrorball();
translate([-36+5,42-4,13])cube([20,12,17]);
}
for(i=[-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6]){
translate([-36+5+10,42-4+17,-2+i])rotate([90,90,0])cylinder(r=4.7/2,h=100);
}
translate([-36+5+10,42-4+17,13+10])rotate([90,90,0])cylinder(r=4.7/2,h=10);
translate([-36+5+10,42-4+8,13+10])rotate([90,90,0])cylinder(r=10/2,h=10);
}
}
}


module lasermount_connector_two(){
union(){
difference(){
union(){
translate([-36+9,40-2,13])rotate([-90,0,0])import("stls/mirrorball.stl"); //mirrorball();
translate([-36+5+5,42-4,13])cube([15,12,15]);
}
for(i=[-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6]){
translate([-36+5+10+9,42-4+17,-2+i])rotate([90,90,0])cylinder(r=4.7/2,h=100);
}

/*
translate([-36+5+10,42-4+17,13+10])rotate([90,90,0])cylinder(r=4.7/2,h=10);
translate([-36+5+10,42-4+8,13+10])rotate([90,90,0])cylinder(r=10/2,h=10);
*/
}
}
}








module lasermount_assy(){
//translate([-62.5,24,-10])rotate([90,0,0])import("stls/cap.stl"); //cap();
//translate([10,40,-11])translate([10,-10,-10])rotate([0,0,0])lasermodule();

//lasermount_connector();
//rotate([0,180,0])import("stls/ballpart.stl");//ballpart();
difference(){union(){
translate([-20,30,-2])sphere(r=11);
//translate([-15-5,27.5,-11+5])cube([30,5,10]);
translate([-15-5,27.5+2.5,-11+5+4])rotate([90,0,90])cylinder(r=10/2,h=20);
}
//for(i=[-6,-5,-4,-3,-2,-1,0,1,2,3,4]){
for(i=[-7,-6,-2,2,3]){
translate([-20,50,i])rotate([90,0,0])cylinder(r=3.7/2,h=200);
}
//translate([-15-5-10,27.5-10,-11-5])cube([20,25,5]);
}
//translate([-15-10,25,-11])cube([35,10,10]);
//translate([-15,25,-11])cube([25,10,10]);

//laser holding part
translate([-10,0,0])difference(){
translate([10,20,-11])cube([20,20,20]);
translate([10,20,-11])
translate([10,10,-10])rotate([0,0,0])lasermodule();
}

}


//www.dx.com
//http://www.dx.com/p/100mw-532nm-green-laser-module-3v-11-9mm-26890.WKXIfxIrKRs
//100mW 532nm Green Laser Module (3V 11.9mm)
module lasermodule(){

l = 2.44 * 24.5;
diam = 0.47 * 24.5;
diam = 13.4;
cylinder(r=diam/2,h=l);
}


//translate([100,-50,100])rotate([90,0,0])nextgen_syringe10ml_assy();
//TW_04_12_slider
//color("lightgrey")translate([-56.5,200,104.45])rotate([90,90,0])syringe10ml_clipmount();
//nbg = 0.4;color([nbg,nbg,nbg])translate([-22.85,1,2.5])rotate([0,180,0])stepper_linear_m8nut_coupler();
//cbg = 0.55;color([cbg,cbg,cbg])translate([-25.75,123,-30])rotate([90,-90,0])syringeshuttle_clipbracket();



//translate([28,21,5])syringe_pcb_holder_back();

module syringe_pcb_holder_for_syringemodule(){
difference(){
union(){
translate([-0,0,20])solenoid_endstop_brd(49.5,29);
translate([-25,6,20])cube([20,20,4]);
}
translate([-16.5,16,20-1])cylinder(r=5.4/2,h=20);
}
translate([-0,0,20])cube([36+12,31,1.5]);

}

module nextgen_syringe10ml_assy(){

//board mount here
syringe_pcb_holder_for_syringemodule();


color("lightgrey")
translate([0,98,0])syringe10mlmount_plungerfix_assy();
translate([-41,-20+100,35])color("lightblue")rotate([0,90,90])syringe_10ml();
color("lightgrey")translate([-56.5,200,104.45])rotate([90,90,0])syringe10ml_clipmount();
translate([-34+5-9-3,20-3.5,3])igus_TW_04_12_slider();
igus_slidermount_encoder_TW_04_12_motormount_assy_m8();
translate([0,12,0]){
sbg = 0.9;color([sbg,sbg,sbg])translate([0,-4,0])igus_TW_04_12_slider_plate();
cbg = 0.55;color([cbg,cbg,cbg])translate([-25.75,123,-30])rotate([90,-90,0])syringeshuttle_clipbracket();
nbg = 0.4;color([nbg,nbg,nbg])translate([-22.85,1,2.5])stepper_linear_m8nut_coupler();
}
translate([-25-6.5,320,-4.6])rotate([90,0,0])tslot20(400);
translate([-50,0,-13])valve_assy();
}

module openmv_connector(w=2.5) {
  translate([1.5, w, 5])
  difference() {
    rotate([90])
      scale([1.7,1])
      cylinder(r=5, h=w);
    rotate([90])
      translate([4,0])
      cylinder(r=1.6, h=w, $fn=7);
    translate([-11.5, -3, -5])
    cube([10,4,10]);
  }
}
module openmv_connectors() {
  connector();
  translate([0, 5]) openmv_connector();
  translate([0, 10]) openmv_connector();
}


module justclip(){
translate([0, 15]) rotate([90]) difference() {
  color("blue")
  cube([15, 15, 15]);
  //translate([0,4.5])
  //cube([10, 6.2, 15]);
}
module base() {
  cube([10,2,3]);
  translate([8,0])
    cube([2,2,5]);
}
translate([15, 1.5]) {
  base();
  translate([0,5]) base();
  translate([0,10]) base();
  connectors();
}
}


module tslot_breadboard(){
difference(){
translate([-45,0,0])cube([30,20,4]);
translate([-38,10,0])cylinder(r=6.7/2,h=20);
}
difference(){
union(){
translate([-20,0,0])cube([17,20,20]);
}
translate([-40,0,15])rotate([0,45,0])cube([20,30,40]);
translate([-20,10,10])rotate([0,90,0])cylinder(r=5.7/2,h=300);
for(i=[0:30]){
translate([-20,10,10+i*0.5])rotate([0,90,0])cylinder(r=9.7/2,h=9);
}
}
}

module filament_driver_assy_motormount(){
difference(){
color([cc,cc,cc])translate([-21-29+0.5,-21-1,3-48])cube([5,42,48]);
translate([-21-29+0.5-2,-21+9,3-48+9])rotate([0,90,0])cylinder(r=4.7/2,h=30);
translate([-21-29+0.5-2,-21+32,3-48+9])rotate([0,90,0])cylinder(r=4.7/2,h=30);
}
cc = 0.8;color([cc,cc,cc])translate([0,0-1,0])translate([-21-29+0.5,-21,3-20])cube([20+8+5-7.5,42,20+6-5]);
difference(){
cc = 0.8;color([cc,cc,cc])translate([0,0-1,0])translate([-21-29+0.5,-21,0])cube([28+2+5+32,42,9-5]);
translate([-1,-1,-1])rotate([0,0,0])cylinder(r=26/2,h=30);
translate([-21+35,-21+5.5-1.1,3+6-20])cylinder(r=4.7/2,h=200);
translate([-21+35-30-1.1,-21+5.5-1.15,3+6-20])cylinder(r=4.7/2,h=200);
translate([-21+35,-21+5.5+30-0.2,3+6-20])cylinder(r=4.7/2,h=200);
translate([-21+35-30-1.2,-21+5.5+30,3+6-20])cylinder(r=4.7/2,h=200);
}
}






